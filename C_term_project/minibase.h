/* This file was automatically generated.  Do not edit! */
int main(int argc,char const *argv[]);
void interactive_mode(Node *root);
void stdin_mode(int argc,char const *argv[]);
Node *import_data(char const *filename,Node *root,size_t *error_count,size_t *record_count);
Record *parse_line(FILE *file,PARSE_LINE_ERROR_FLAG *error);
FILE *ensure_open_file(char const *filename);
void fatal(const char *msg);
void warn(char *msg);
void print_tree(Node *root);
void print_leafs(Node *leaf_node);
void print_leaf(Node *leaf_node);
void print_layer(Node *left_node);
void print_node(Node *node);
void print_help();
void print_welcome();
Node *insert_into_node_and_split(Node *root,Node *old_node,char *key,size_t index,Node *left_node,Node *right_node);
Node *inesrt_into_parent(Node *root,Node *left_node,char *key,Node *right_node);
void reset_parent(Node *node);
size_t cut(size_t length);
Node *insert_into_leaf_and_split(Node *root,Node *leaf,char *key,size_t insertion_point,Record *record);
void _add_into_node(Node *node,char *key,size_t insertion_point,void *left_node,void *right_node);
void _write_into_node(Node *node,char *key,size_t insertion_point,void *left_node,void *right_node);
void _add_into_leaf(Node *leaf,char *key,size_t insertion_point,void *record);
void _write_into_leaf(Node *leaf,char *key,size_t insertion_point,void *record);
Node *insert_into_leaf(Node *root,Node *leaf,char *key,Record *pointer);
Node *insert_record(Node *root,Record *new_record);
Node *insert(Node *root,char *key,char *value);
Node *init_new_tree(char *key,Record *Record);
Record *find(Node *root,char *key);
Node *find_leaf(Node *root,char *key);
bool b_search_key(size_t *index,void *base,size_t total,char *target,int(*cmp)(char const *,char const *));
int b_search_subtree(void *base,int total,char *target,int(*cmp)(char const *,char const *));
int strcmp(char const *str1,char const *str2);
void memcpy(void *dst,const void *src,size_t length);
void pointer_copy(void **dst,const void **src,size_t length);
void pointer_shift(void **dst,const void **src,size_t length);
void shift_backward(void *dst,const void *src,size_t length);
Node *make_leaf(void);
Node *_make_node(size_t max_key_num,bool is_leaf);
Node *make_node(void);
void free_record(Record *record);
Record *make_record(char *key,char *value);
void print_record(const Record *record);
